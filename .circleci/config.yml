version: 2.1
executors:
  build-ci-env:
    docker:
      - image: "circleci/node:8.10"
    working_directory: ~/seolhun

jobs:
  build-production:
    executor: build-ci-env
    steps:
      - checkout

      - restore_cache:
          keys:
            - dependencies-cache-{{ checksum "package.json" }}
            - dependencies-cache-

      - run:
          name: "Checking versions"
          command: |
            node --version
            npm --version
            yarn --version

      - run:
          name: "install packages"
          command: yarn install

      - run:
          name: "Lerna bootstrap packages"
          command: yarn bs

      - save_cache:
          key: node-dependencies-{{ checksum "package.json" }}
          paths:
            - node_modules

      - run:
          name: "Lerna packages bundling"
          command: yarn bundle

      - run:
          name: "Show all files"
          command: ls -al

      - persist_to_workspace:
          root: .
          paths:
            - dist

  deploy-develop:
    executor: build-ci-env
    steps:
      - checkout
      - attach_workspace:
          at: .

      - run:
          name: "Show all files"
          command: ls -al

      - run:
          name: "Deploy docs into surge"
          command: yarn deploy:docs:dev

      - run:
          name: "Deploy examples into surge"
          command: yarn deploy:ex:dev

  deploy-production:
    executor: build-ci-env
    steps:
      - checkout
      - attach_workspace:
          at: .

      - run:
          name: "Deploy docs into surge"
          command: yarn deploy:docs

      - run:
          name: "Deploy examples into surge"
          command: yarn deploy:ex

workflows:
  version: 2.1
  build-and-deploy:
    jobs:
      - build-production:
          filters:
            branches:
              only:
                - master
                - develop

      - deploy-develop:
          requires:
            - build-production
          filters:
            branches:
              only:
                - develop

      - deploy-production:
          requires:
            - build-production
          filters:
            branches:
              only:
                - master
